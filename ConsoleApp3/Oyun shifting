int n1, n2, n3, n4, n5, n6, n7, n8, n9, round, turn_number, player_score, computer_score, temp; string turn = "Player"; string who_won; int can_score;
turn_number = 0; round = 1; computer_score = 0; player_score = 0; int points = 0; int board_score; int kimin_sırası = 0; int kim_puan_aldı = 0;
int temp_for_board_reading_int; int Value = 0; n1 = 0; n2 = 0; n3 = 0; n4 = 0; n5 = 0; n6 = 0; n7 = 0; n8 = 0; n9 = 0;
Random random = new Random();

Console.WriteLine(); Console.WriteLine("             Welcome to my game :dd "); Console.WriteLine(); Console.WriteLine("                 CREATE  BOARD");
Console.WriteLine("             #####################");
Console.WriteLine("             ##                 ##");
Console.WriteLine("             ##                 ##");
Console.WriteLine("             ##                 ##");
Console.WriteLine("             ##                 ##");
Console.WriteLine("             ##                 ##");
Console.WriteLine("             ##                 ##");
Console.WriteLine("             ##                 ##");
Console.WriteLine("             #####################"); Console.WriteLine();

for (int Top = 6; Top <= 10; Top = Top + 2)
{
    for (int Left = 18; Left <= 28; Left += 5)
    {
        while (true)
        {
            Console.SetCursorPosition(Left, Top);
            string temp_for_board_reading = Console.ReadLine();
            if (!(temp_for_board_reading == "1" || temp_for_board_reading == "2" || temp_for_board_reading == "3" ||
                  temp_for_board_reading == "4" || temp_for_board_reading == "5" || temp_for_board_reading == "6" ||
                  temp_for_board_reading == "7" || temp_for_board_reading == "8" || temp_for_board_reading == "9"))
            {
                Console.SetCursorPosition(45, 7);
                Console.WriteLine("\x1b[31mPls Enter a Number\x1b[39m");
                Console.SetCursorPosition(Left, Top);
                Thread.Sleep(1000);
                Console.SetCursorPosition(45, 7);
                Console.WriteLine("                   ");
                continue;
            }
            temp_for_board_reading_int = Convert.ToInt32(temp_for_board_reading);
            if ((temp_for_board_reading_int != n1) && (temp_for_board_reading_int != n2) && (temp_for_board_reading_int != n3) &&
                (temp_for_board_reading_int != n4) && (temp_for_board_reading_int != n5) && (temp_for_board_reading_int != n6) &&
                (temp_for_board_reading_int != n7) && (temp_for_board_reading_int != n8) && (temp_for_board_reading_int != n9))
            {
                break;
            }
            else
            {
                Console.SetCursorPosition(45, 6);
                Console.WriteLine("\x1b[31mBoard Can Not Contain Same Numbers\x1b[39m");
                Console.SetCursorPosition(45, 7);
                Console.WriteLine("\x1b[31mPls Enter a Different Number\x1b[39m");
                Console.SetCursorPosition(Left, Top);
                Thread.Sleep(1200);
                Console.SetCursorPosition(45, 6);
                Console.WriteLine("                                   ");
                Console.SetCursorPosition(45, 7);
                Console.WriteLine("                              ");
            }
        }
        Value++;
        if (Value == 1) n1 = temp_for_board_reading_int;
        else if (Value == 2) n2 = temp_for_board_reading_int;
        else if (Value == 3) n3 = temp_for_board_reading_int;
        else if (Value == 4) n4 = temp_for_board_reading_int;
        else if (Value == 5) n5 = temp_for_board_reading_int;
        else if (Value == 6) n6 = temp_for_board_reading_int;
        else if (Value == 7) n7 = temp_for_board_reading_int;
        else if (Value == 8) n8 = temp_for_board_reading_int;
        else if (Value == 9) n9 = temp_for_board_reading_int;
    }
}
bool x1 = ((n1 + 2 == n2 + 1 && n2 + 1 == n3) | (n1 - 2 == n2 - 1 && n2 - 1 == n3)); if (x1) points = points + 1;
bool x2 = ((n4 + 2 == n5 + 1 && n5 + 1 == n6) | (n4 - 2 == n5 - 1 && n5 - 1 == n6)); if (x2) points = points + 1;
bool x3 = ((n7 + 2 == n8 + 1 && n8 + 1 == n9) | (n7 - 2 == n8 - 1 && n8 - 1 == n9)); if (x3) points = points + 1;
bool x4 = ((n1 + 2 == n4 + 1 && n4 + 1 == n7) | (n1 - 2 == n4 - 1 && n4 - 1 == n7)); if (x4) points = points + 1;
bool x5 = ((n2 + 2 == n5 + 1 && n5 + 1 == n8) | (n2 - 2 == n5 - 1 && n5 - 1 == n8)); if (x5) points = points + 1;
bool x6 = ((n3 + 2 == n6 + 1 && n6 + 1 == n9) | (n3 - 2 == n6 - 1 && n6 - 1 == n9)); if (x6) points = points + 1;
bool x7 = ((n1 + 2 == n5 + 1 && n5 + 1 == n9) | (n1 - 2 == n5 - 1 && n5 - 1 == n9)); if (x7) points = points + 1;
bool x8 = ((n3 + 2 == n5 + 1 && n5 + 1 == n7) | (n3 - 2 == n5 - 1 && n5 - 1 == n7)); if (x8) points = points + 1; board_score = (points * points);

Console.WriteLine(); Console.WriteLine();
Console.WriteLine("-----------------------------------------------------------------------------");
Console.WriteLine();
Console.WriteLine("                  First look!                  ");
Console.WriteLine();
Console.WriteLine("             #####################");
Console.WriteLine("             ##                 ##");
Console.WriteLine("             ##   " + n1 + "    " + n2 + "    " + n3 + "   ##      Turn           : " + turn_number);
Console.WriteLine("             ##                 ##");
Console.WriteLine("             ##   " + n4 + "    " + n5 + "    " + n6 + "   ##      Player Score   : " + player_score);
Console.WriteLine("             ##                 ##");
Console.WriteLine("             ##   " + n7 + "    " + n8 + "    " + n9 + "   ##      Computer Score : " + computer_score);
Console.WriteLine("             ##                 ##");
Console.WriteLine("             #####################");
Console.WriteLine("                Board score : " + board_score); Thread.Sleep(2000);

while (round < 6)
{
    int points2, temp2, best_point, whıch_move_is_best, board_score2;
    turn_number = turn_number + 1;

    Console.WriteLine(); Console.WriteLine();
    Console.WriteLine("-----------------------------------------------------------------------------");
    Console.WriteLine();
    Console.WriteLine("             |------Round " + round + "------|");
    Console.WriteLine();
    Console.WriteLine("             #####################");
    Console.WriteLine("             ##                 ##");
    Console.WriteLine("             ##   " + n1 + "    " + n2 + "    " + n3 + "   ##      Turn:     " + turn_number + "      &      " + turn);
    Console.WriteLine("             ##                 ##");
    Console.WriteLine("             ##   " + n4 + "    " + n5 + "    " + n6 + "   ##      Player Score   : " + player_score);
    Console.WriteLine("             ##                 ##");
    Console.WriteLine("             ##   " + n7 + "    " + n8 + "    " + n9 + "   ##      Computer Score : " + computer_score);
    Console.WriteLine("             ##                 ##");
    Console.WriteLine("             #####################");
    Console.WriteLine("                Board score : " + board_score);

    if (kimin_sırası % 2 == 1)
    {
        can_score = board_score; best_point = 0; whıch_move_is_best = 0; Thread.Sleep(1500);
        for (int b = 1; b < 7; b++)
        {
            int cn1, cn2, cn3, cn4, cn5, cn6, cn7, cn8, cn9; cn1 = n1; cn2 = n2; cn3 = n3; cn4 = n4; cn5 = n5; cn6 = n6; cn7 = n7; cn8 = n8; cn9 = n9;
            if (b == 1) { temp2 = cn1; cn1 = cn3; cn3 = cn2; cn2 = temp2; }
            else if (b == 2) { temp2 = cn4; cn4 = cn6; cn6 = cn5; cn5 = temp2; }
            else if (b == 3) { temp2 = cn7; cn7 = cn9; cn9 = cn8; cn8 = temp2; }
            else if (b == 4) { temp2 = cn1; cn1 = cn7; cn7 = cn4; cn4 = temp2; }
            else if (b == 5) { temp2 = cn2; cn2 = cn8; cn8 = cn5; cn5 = temp2; }
            else if (b == 6) { temp2 = cn3; cn3 = cn9; cn9 = cn6; cn6 = temp2; }
            points2 = 0;

            bool cx1 = ((cn1 + 2 == cn2 + 1 && cn2 + 1 == cn3) | (cn1 - 2 == cn2 - 1 && cn2 - 1 == cn3)); if (cx1) points2 = points2 + 1;
            bool cx2 = ((cn4 + 2 == cn5 + 1 && cn5 + 1 == cn6) | (cn4 - 2 == cn5 - 1 && cn5 - 1 == cn6)); if (cx2) points2 = points2 + 1;
            bool cx3 = ((cn7 + 2 == cn8 + 1 && cn8 + 1 == cn9) | (cn7 - 2 == cn8 - 1 && cn8 - 1 == cn9)); if (cx3) points2 = points2 + 1;
            bool cx4 = ((cn1 + 2 == cn4 + 1 && cn4 + 1 == cn7) | (cn1 - 2 == cn4 - 1 && cn4 - 1 == cn7)); if (cx4) points2 = points2 + 1;
            bool cx5 = ((cn2 + 2 == cn5 + 1 && cn5 + 1 == cn8) | (cn2 - 2 == cn5 - 1 && cn5 - 1 == cn8)); if (cx5) points2 = points2 + 1;
            bool cx6 = ((cn3 + 2 == cn6 + 1 && cn6 + 1 == cn9) | (cn3 - 2 == cn6 - 1 && cn6 - 1 == cn9)); if (cx6) points2 = points2 + 1;
            bool cx7 = ((cn1 + 2 == cn5 + 1 && cn5 + 1 == cn9) | (cn1 - 2 == cn5 - 1 && cn5 - 1 == cn9)); if (cx7) points2 = points2 + 1;
            bool cx8 = ((cn3 + 2 == cn5 + 1 && cn5 + 1 == cn7) | (cn3 - 2 == cn5 - 1 && cn5 - 1 == cn7)); if (cx8) points2 = points2 + 1;

            board_score2 = (points2 * points2);
            if (board_score2 > best_point)
            {
                best_point = board_score2;
                whıch_move_is_best = b;
            }
        }
        if (can_score == 0)
        {
            if (whıch_move_is_best == 0) { whıch_move_is_best = random.Next(1, 7); }

            if (whıch_move_is_best == 1) { temp2 = n1; n1 = n3; n3 = n2; n2 = temp2; }
            else if (whıch_move_is_best == 2) { temp2 = n4; n4 = n6; n6 = n5; n5 = temp2; }
            else if (whıch_move_is_best == 3) { temp2 = n7; n7 = n9; n9 = n8; n8 = temp2; }
            else if (whıch_move_is_best == 4) { temp2 = n1; n1 = n7; n7 = n4; n4 = temp2; }
            else if (whıch_move_is_best == 5) { temp2 = n2; n2 = n8; n8 = n5; n5 = temp2; }
            else if (whıch_move_is_best == 6) { temp2 = n3; n3 = n9; n9 = n6; n6 = temp2; }
        }
        else
        {
            whıch_move_is_best = random.Next(1, 7);
            if (whıch_move_is_best == 1) { temp2 = n1; n1 = n3; n3 = n2; n2 = temp2; }
            else if (whıch_move_is_best == 2) { temp2 = n4; n4 = n6; n6 = n5; n5 = temp2; }
            else if (whıch_move_is_best == 3) { temp2 = n7; n7 = n9; n9 = n8; n8 = temp2; }
            else if (whıch_move_is_best == 4) { temp2 = n1; n1 = n7; n7 = n4; n4 = temp2; }
            else if (whıch_move_is_best == 5) { temp2 = n2; n2 = n8; n8 = n5; n5 = temp2; }
            else if (whıch_move_is_best == 6) { temp2 = n3; n3 = n9; n9 = n6; n6 = temp2; }
        }
        Console.WriteLine(); Console.WriteLine(); Console.WriteLine("              Computer's move : " + whıch_move_is_best);

        kimin_sırası = kimin_sırası + 1; kim_puan_aldı = kim_puan_aldı + 1;
        if (kimin_sırası % 2 == 0) turn = "Player";
        else turn = "Computer";
    }
    else
    {
        Console.WriteLine(); Console.WriteLine("Please choose a move from 1 to 6");
        string hamle_numarası = (Console.ReadLine());

        can_score = board_score;
        kimin_sırası = kimin_sırası + 1; kim_puan_aldı = kim_puan_aldı + 1;
        if (kimin_sırası % 2 == 0) turn = "Player";
        else turn = "Computer";

        if (hamle_numarası == "1") { temp = n1; n1 = n3; n3 = n2; n2 = temp; }
        else if (hamle_numarası == "2") { temp = n4; n4 = n6; n6 = n5; n5 = temp; }
        else if (hamle_numarası == "3") { temp = n7; n7 = n9; n9 = n8; n8 = temp; }
        else if (hamle_numarası == "4") { temp = n1; n1 = n7; n7 = n4; n4 = temp; }
        else if (hamle_numarası == "5") { temp = n2; n2 = n8; n8 = n5; n5 = temp; }
        else if (hamle_numarası == "6") { temp = n3; n3 = n9; n9 = n6; n6 = temp; }
        else
        {
            Console.WriteLine("invalid move number"); turn_number = turn_number - 1; kimin_sırası = kimin_sırası + 1; kim_puan_aldı = kim_puan_aldı + 1;
            if (kimin_sırası % 2 == 0) turn = "Player"; else turn = "Computer";
        }
    }
    points = 0;
    x1 = ((n1 + 2 == n2 + 1 && n2 + 1 == n3) | (n1 - 2 == n2 - 1 && n2 - 1 == n3)); if (x1) points = points + 1;
    x2 = ((n4 + 2 == n5 + 1 && n5 + 1 == n6) | (n4 - 2 == n5 - 1 && n5 - 1 == n6)); if (x2) points = points + 1;
    x3 = ((n7 + 2 == n8 + 1 && n8 + 1 == n9) | (n7 - 2 == n8 - 1 && n8 - 1 == n9)); if (x3) points = points + 1;
    x4 = ((n1 + 2 == n4 + 1 && n4 + 1 == n7) | (n1 - 2 == n4 - 1 && n4 - 1 == n7)); if (x4) points = points + 1;
    x5 = ((n2 + 2 == n5 + 1 && n5 + 1 == n8) | (n2 - 2 == n5 - 1 && n5 - 1 == n8)); if (x5) points = points + 1;
    x6 = ((n3 + 2 == n6 + 1 && n6 + 1 == n9) | (n3 - 2 == n6 - 1 && n6 - 1 == n9)); if (x6) points = points + 1;
    x7 = ((n1 + 2 == n5 + 1 && n5 + 1 == n9) | (n1 - 2 == n5 - 1 && n5 - 1 == n9)); if (x7) points = points + 1;
    x8 = ((n3 + 2 == n5 + 1 && n5 + 1 == n7) | (n3 - 2 == n5 - 1 && n5 - 1 == n7)); if (x8) points = points + 1; board_score = (points * points);

    if ((board_score > 0) && (can_score == 0))
    {
        if (kimin_sırası % 2 == 1) kimin_sırası = kimin_sırası + 1;
        if (kimin_sırası % 2 == 0) turn = "Player";
        else turn = "Computer";
        turn_number = 0;
        if (kim_puan_aldı % 2 == 1) who_won = "Player";
        else who_won = "Computer";

        Thread.Sleep(750); Console.WriteLine();
        Console.WriteLine();
        Console.WriteLine("             |------Round " + round + "------|"); Console.WriteLine();
        Console.WriteLine();
        Console.WriteLine("             #####################" + "              " + who_won + " won " + board_score + " point!");
        Console.WriteLine("             ##                 ##");
        Console.WriteLine("             ##   " + n1 + "    " + n2 + "    " + n3 + "   ##" + "             *********************                  ");
        Console.WriteLine("             ##                 ##" + "             *                   *");
        Console.WriteLine("             ##   " + n4 + "    " + n5 + "    " + n6 + "   ##" + "             *    Round " + round + " End    *");
        Console.WriteLine("             ##                 ##" + "             *                   *");
        Console.WriteLine("             ##   " + n7 + "    " + n8 + "    " + n9 + "   ##" + "             *********************                  ");
        Console.WriteLine("             ##                 ##");
        Console.WriteLine("             #####################");

        round = round + 1; points = 0;

        n1 = random.Next(1, 10);
        do n2 = random.Next(1, 10); while (n1 == n2);
        do n3 = random.Next(1, 10); while (n1 == n3 | n2 == n3);
        do n4 = random.Next(1, 10); while (n1 == n4 | n2 == n4 | n3 == n4);
        do n5 = random.Next(1, 10); while (n1 == n5 | n2 == n5 | n3 == n5 | n4 == n5);
        do n6 = random.Next(1, 10); while (n1 == n6 | n2 == n6 | n3 == n6 | n4 == n6 | n5 == n6);
        do n7 = random.Next(1, 10); while (n1 == n7 | n2 == n7 | n3 == n7 | n4 == n7 | n5 == n7 | n6 == n7);
        do n8 = random.Next(1, 10); while (n1 == n8 | n2 == n8 | n3 == n8 | n4 == n8 | n5 == n8 | n6 == n8 | n7 == n8);
        do n9 = random.Next(1, 10); while (n1 == n9 | n2 == n9 | n3 == n9 | n4 == n9 | n5 == n9 | n6 == n9 | n7 == n9 | n8 == n9);

        if (kim_puan_aldı % 2 == 1) player_score = (player_score + board_score);
        else computer_score = (computer_score + board_score);

        x1 = ((n1 + 2 == n2 + 1 && n2 + 1 == n3) | (n1 - 2 == n2 - 1 && n2 - 1 == n3)); if (x1) points = points + 1;
        x2 = ((n4 + 2 == n5 + 1 && n5 + 1 == n6) | (n4 - 2 == n5 - 1 && n5 - 1 == n6)); if (x2) points = points + 1;
        x3 = ((n7 + 2 == n8 + 1 && n8 + 1 == n9) | (n7 - 2 == n8 - 1 && n8 - 1 == n9)); if (x3) points = points + 1;
        x4 = ((n1 + 2 == n4 + 1 && n4 + 1 == n7) | (n1 - 2 == n4 - 1 && n4 - 1 == n7)); if (x4) points = points + 1;
        x5 = ((n2 + 2 == n5 + 1 && n5 + 1 == n8) | (n2 - 2 == n5 - 1 && n5 - 1 == n8)); if (x5) points = points + 1;
        x6 = ((n3 + 2 == n6 + 1 && n6 + 1 == n9) | (n3 - 2 == n6 - 1 && n6 - 1 == n9)); if (x6) points = points + 1;
        x7 = ((n1 + 2 == n5 + 1 && n5 + 1 == n9) | (n1 - 2 == n5 - 1 && n5 - 1 == n9)); if (x7) points = points + 1;
        x8 = ((n3 + 2 == n5 + 1 && n5 + 1 == n7) | (n3 - 2 == n5 - 1 && n5 - 1 == n7)); if (x8) points = points + 1; board_score = (points * points); kim_puan_aldı = 0;
    }
}
Console.WriteLine();
Console.WriteLine("--------------------------------------------------------------------"); Console.WriteLine();
Console.WriteLine("                     ++++++++++++++++++++++"); Console.WriteLine();
Console.WriteLine("                      Player's Point   : " + player_score); Console.WriteLine();
Console.WriteLine("                      Computer's Point : " + computer_score); Console.WriteLine();
Console.WriteLine("                     ++++++++++++++++++++++"); Console.WriteLine();
Console.WriteLine("--------------------------------------------------------------------"); Console.WriteLine();

if (computer_score > player_score) Console.WriteLine("                         Computer WON");
else if (computer_score < player_score) Console.WriteLine("                         Player WON");
else Console.WriteLine("                         ENDED DRAW"); Console.WriteLine(""); Console.WriteLine();

string exit;
Console.WriteLine("Press 'x' to exit the game !!");Console.WriteLine();
do exit = Console.ReadLine();
while (exit != "x");
